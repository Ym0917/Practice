//对于非负整数 X 而言，X 的数组形式是每位数字按从左到右的顺序形成的数组。例如，如果 X = 1231，那么其数组形式为 [1, 2, 3, 1]。
//
//给定非负整数 X 的数组形式 A，返回整数 X + K 的数组形式。
//
//示例 1：
//
//输入：A = [1, 2, 0, 0], K = 34
//输出：[1, 2, 3, 4]
//解释：1200 + 34 = 1234
//
//示例 2：
//
//输入：A = [9, 9, 9, 9, 9, 9, 9, 9, 9, 9], K = 1
//输出：[1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
//解释：9999999999 + 1 = 10000000000
//
//提示：
//1 <= A.length <= 10000
//0 <= A[i] <= 9
//0 <= K <= 10000
//如果 A.length > 1，那么 A[0] != 0

int* addToArrayForm(int* A, int ASize, int K, int* returnSize)
{
	int* res = malloc(sizeof(int)* fmax(10, ASize + 1));
	*returnSize = 0;
	for (int i = ASize - 1; i >= 0; --i)
	{
		int sum = A[i] + K % 10;
		K /= 10;
		if (sum >= 10)
		{
			K++;
			sum -= 10;
		}
		res[(*returnSize)++] = sum;
	}
	for (; K > 0; K /= 10)
	{
		res[(*returnSize)++] = K % 10;
	}
	for (int i = 0; i < (*returnSize) / 2; i++)
	{
		int tmp = res[i];
		res[i] = res[(*returnSize) - 1 - i];
		res[(*returnSize) - 1 - i] = tmp;
	}
	return res;
}
