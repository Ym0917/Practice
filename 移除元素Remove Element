//Given an array nums and a value val, remove all instances of that value in-place and return the new length.
//给你一个数组 nums 和一个值 val，你需要 原地 移除所有数值等于 val 的元素，并返回移除后数组的新长度。
//Input: nums = [3, 2, 2, 3], val = 3
//Output : 2, nums = [2, 2]
//	 Explanation : Your function should return length = 2, with the first two elements of nums being 2.
//				   It doesn't matter what you leave beyond the returned length. For example if you return 2 with nums = [2,2,3,3] or nums = [2,2,0,0], your answer will be accepted.

//way 1:倒着往回看
int removeElement(int* nums, int numsSize, int val)
{
	int i = numsSize - 1;
	for (; i >= 0; i--)
	{
		if (val == nums[i])
		{
			nums[i] = nums[numsSize - 1];
			numsSize--;
		}
	}
	return numsSize;
}

//way 2:双指针
int removeElement(int* nums, int numsSize, int val)
{
	int i = 0, j = 0;
	for (; i<numsSize; i++)
	{
		if (val != nums[i])
		{
			nums[j] = nums[i];
			j++;
		}
	}
	return j;
}
